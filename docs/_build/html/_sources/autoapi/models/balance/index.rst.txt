:py:mod:`models.balance`
========================

.. py:module:: models.balance

.. autoapi-nested-parse::

   Represents the amount outstanding on a Transaction from a previous Reporting Period.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   models.balance.Balance




.. py:class:: Balance


   Bases: :py:obj:`python_accounting.mixins.IsolatingMixin`, :py:obj:`python_accounting.mixins.ClearingMixin`, :py:obj:`python_accounting.models.Recyclable`

   Represents a Balance brought down from previous Reporting Periods.

   .. py:property:: is_posted
      :type: bool

      is_posted analog for the assignment model.

   .. py:property:: credited
      :type: bool

      credited analog for the assignment model.

   .. py:property:: compound
      :type: bool

      compound analog for the assignment model.

   .. py:attribute:: BalanceType

      The double entry types of Balances.

      :type: (StrEnum)

   .. py:attribute:: BalanceTransactions

      A list of Transaction Types that can have Balances.

      :type: (StrEnum)

   .. py:attribute:: __mapper_args__

      

   .. py:attribute:: id
      :type: sqlalchemy.orm.Mapped[int]

      The primary key of the Account database record.

      :type: (int)

   .. py:attribute:: transaction_date
      :type: sqlalchemy.orm.Mapped[datetime.datetime]

      The date of the Balance Transaction.

      :type: (datetime)

   .. py:attribute:: reference
      :type: sqlalchemy.orm.Mapped[str]

      Identifying information about the Balance Transaction.

      :type: (`str`, optional)

   .. py:attribute:: transaction_no
      :type: sqlalchemy.orm.Mapped[str]

      The Transaction number of the Balance Transaction.

      :type: (str)

   .. py:attribute:: transaction_type
      :type: sqlalchemy.orm.Mapped[strenum.StrEnum]

      The Transaction type of the Balance Transaction.

      :type: (TransactionType)

   .. py:attribute:: amount
      :type: sqlalchemy.orm.Mapped[decimal.Decimal]

      The amount outstanding on the Balance Transaction.

      :type: (Decimal)

   .. py:attribute:: balance_type
      :type: sqlalchemy.orm.Mapped[strenum.StrEnum]

      The side of the double entry to post the Balance amount.

      :type: (BalanceType)

   .. py:attribute:: currency_id
      :type: sqlalchemy.orm.Mapped[int]

      The id of the Currency model associated with the Balance.

      :type: (int)

   .. py:attribute:: account_id
      :type: sqlalchemy.orm.Mapped[int]

      The id of the Account model to which the Balance belongs.

      :type: (int)

   .. py:attribute:: reporting_period_id
      :type: sqlalchemy.orm.Mapped[int]

      The id of the Reporting Period model to which the Balance belongs.

      :type: (int)

   .. py:attribute:: currency
      :type: sqlalchemy.orm.Mapped[python_accounting.models.Currency]

      The Currency model associated with the Balance.

      :type: (Currency)

   .. py:attribute:: account
      :type: sqlalchemy.orm.Mapped[python_accounting.models.Account]

      The Account model to which the Balance belongs.

      :type: (Account)

   .. py:attribute:: reporting_period
      :type: sqlalchemy.orm.Mapped[python_accounting.models.ReportingPeriod]

      The Reporting Period model to which the Balance belongs.

      :type: (ReportingPeriod)

   .. py:method:: __repr__() -> str


   .. py:method:: opening_trial_balance(session, year: int = None) -> dict
      :staticmethod:

      Gets the total opening balances for the Entity's accounts for the given year.

      :param session: The accounting session to which the Account belongs.
      :type session: Session
      :param year: The calendar year to retrieve the opening
                   trial balance for. Defaults to the Balance's Entity current Reporting
                   Period's calendar year.
      :type year: `int`, optional

      :returns: With a A summary of the debit and credit balances of the Accounts
                together with a list of the Accounts themselves.
                    - debits (Decimal): The total debit balance.
                    - credits (Decimal): The total credit balance.
                    - accounts (Decimal): Accounts constituting the opening trial balance.
      :rtype: dict


   .. py:method:: validate(session) -> None

      Validates the Balance properties.

      :param session: The accounting session to which the Balance belongs.
      :type session: Session

      :raises NegativeValueError: If the Balance amount is less than 0.
      :raises InvalidBalanceAccountError: If the Balance main Account is an Income Statement Account.
      :raises InvalidBalanceTransactionError: If the Balance Transaction type is not one of the Balance Transaction types.
      :raises InvalidBalanceDateError: If the Balance Transaction date is within the current reporting period and the Entity does not allow mid year balances.

      :returns: None



